from tc import glc
# Function to test glc.rmd()
# Student: Adeoye Sunday Ladele


def test_rmd():
    assert glc.rmd(({'E', 'I'}, {'+', '*', '(', ')', 'a', 'b', 0, 1},
                   {('E', ('I')), ('E', ('E', '+', 'E')), ('E', ('E', '*', 'E')), ('E', ('(', 'E', ')')),
                   ('I', ('a')), ('I', ('b')), ('I', ('I', 'a')), ('I', ('I', 'b')), ('I', ('I', 0)), ('I', ('I', 1))}, 'E'),
                   ['(', 'a', '+', 'b', ')', '+', 'a', '1']) == "E => E+E => E+I => E+I1 => E+a1 => (E)+a1 => (E+E)+a1 => (E+I)+a1 => (E+b)+a1 => (I+b)+a1 => (a+b)+a1"

    assert glc.rmd(({'S', 'A', 'B'}, {'a', 'b'}, {('S', ('a', 'B')), ('S', ('b', 'A')), ('A', ('a', 'a', 'A')), (
        'B', ('b', 'b', 'B')), ('A', ('S')), ('B', ('S')), ('A', ()), ('B', ())}, 'S'),
        ['b', 'a', 'a', 'a', 'b', 'b']) == "S => bA => baaA => baaS => baaaB => baaabbB => baaabb"

    assert glc.rmd(({'S', 'C'}, {0, 1}, {('S', (0, 1, 'S')), ('S', (1, 0, 'S')),
                   ('S', ('C')), ('C', (1, 1, 1))}, 'S'), [0, 1, 1, 1, 1]) == "S => 01S => 01C => 01111"

    assert glc.rmd(({'S'}, {0, 1}, {('S', ()), ('S', (0)), ('S', (1)),
                                    ('S', (0, 'S', 0)), ('S', (1, 'S', 1))}, 'S'), [1, 0, 0, 1]) == "S => 1S1 => 10S01 => 1001"

    assert glc.rmd(({'S', 'A', 'B', 'C'}, {'a', 'b', 'c'}, {('S', ('A', 'a', 'B')), ('S', ('A', 'a', 'C')),
                                                            ('A', ('A', 'a')), ('B', ('B', 'b')), ('C', ('C', 'c')), ('A', ('')), ('B', ()), ('C', ())}, 'S'),
                   ['a', 'a', 'a', 'c']) == "S => AaC => AaCc => Aac => Aaac => Aaaac => aaac"

    assert glc.rmd(({'S'}, {'x', 'y', '+', '-', '/'}, {('S', ('S', '+', 'T')), ('S', ('S', '-', 'T')), ('S',
                   ('S', '/', 'T',)), ('S', ('T'))('T', ('x')), ('T', ('y')), ('T', ('x', 'y'))}, 'S'),
                   ['x', 'y', '+', 'y', '-', 'x']) == "S => S-T => S-x => S+T-x => S+y-x => T+y-x => xy+y-x"

    assert glc.rmd(({'S', }, {'a', 'b'}, {('S', ('a', 'S', 'b', 'S')), ('S',
                   ('b', 'S', 'a', 'S'), ('S', ()))}, 'S'), ['a', 'b', 'a', 'b', 'a', 'b']) == "S => aSbS => aSbaSbS => aSbaSb => aSbab => abSaSbab => abSabab => ababab"

    assert glc.rmd(({'S', 'T'}, {'(', ')', 'a', 'b'}, {('S', ('(', 'T', ')')), ('T', ('a',
                   'a', 'T')), ('T', ('b', 'b', 'T')), ('T', ())}, 'S'),
                   ['(', 'a', 'a', 'b', 'b', ')']) == "S => (T) => (aaT) => (aabbT) => (aabb)"

    assert glc.rmd(({'S', 'Q'}, {'(', '+', '-'}, {('S', ('(', 'S')), ('S', ('Q')),
                   ('Q', ('+', 'Q')), ('Q', ('-', 'Q')), ('Q', ())}, 'S'),
                   ['(', '(', '+', '-']) == "S => (S => ((S =>((Q => ((+Q => ((+-Q => ((+-"

    assert glc.rmd(({'S,', 'T'}, {1, 0}, {('S', (1, 1, 'S')), ('S', ('T')), ('T',
                   (0, 0, 'T')), ('T', ('S')), ('S', ()), ('T', ())}, 'S'),
                   [1, 1, 0, 0, 1, 1]) == "S => 11S => 11T => 1100T => 1100S => 110011S => 110011"
