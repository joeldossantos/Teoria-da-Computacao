# Teste da função gr2afn (tarefa 65)
# Aluno: Marcelo Henrique de Barros

from tc import glc


def test_gr2afn():
    assert glc.gr2afn(({'S', '(', ')'},
                       {'(', ')', ''},
                       {('S', ('(', 'S', ')')), ('S', ('S', 'S')), ('S', (''))},
                       'S')) == ({'q'}, {')', '', '('}, {')', '', '(', 'S'},
                                 {('q', ' ', ')'): set(), ('q', ' ', 'S'): {('q', '('), ('q', 'S'), ('q', ')')},
                                  ('q', ' ', '('): set(), ('q', ')', ')'): ('q', ' '), ('q', '', ''): ('q', ' '),
                                  ('q', '(', '('): ('q', ' ')}, 'S')

    assert glc.gr2afn(({'E', 'F', 'V', 'T'},
                       {'+', '*', 'a', 'b', 'c', '(', ')'},
                       {('E', ('T')), ('E', ('E', '+', 'T')), ('T', ('F')), ('T', ('T', '*', 'F')),
                        ('F', ('V')), ('F', ('(', 'E', ')')), ('V', ('a')), ('V', ('b')), ('V', ('c'))},
                       'E')) == (
           {'q'}, {')', 'b', '*', '+', '(', 'c', 'a'}, {'V', ')', 'F', 'b', '*', '+', 'E', 'T', '(', 'c', 'a'},
           {('q', ' ', 'E'): {('q', '+'), ('q', 'E'), ('q', 'T')},
            ('q', ' ', 'T'): {('q', 'F'), ('q', '*'), ('q', 'T')},
            ('q', ' ', 'V'): {('q', 'c'), ('q', 'b'), ('q', 'a')},
            ('q', ' ', 'F'): {('q', 'V'), ('q', ')'), ('q', 'E'), ('q', '(')}, ('q', ')', ')'): ('q', ' '),
            ('q', 'b', 'b'): ('q', ' '), ('q', '*', '*'): ('q', ' '), ('q', '+', '+'): ('q', ' '),
            ('q', '(', '('): ('q', ' '), ('q', 'c', 'c'): ('q', ' '), ('q', 'a', 'a'): ('q', ' ')}, 'E')

    assert glc.gr2afn(({'A', 'B', 'S'},
                       {0, 1, ''},
                       {('S', ('A', 1, 'B')), ('A', (0, 'A')), ('A', ('')), ('B', (0, 'B')),
                        ('B', (1, 'B')), ('B', (''))},
                       'S')) == ({'q'}, {0, 1, ''}, {0, 1, '', 'A', 'S', 'B'},
                                 {('q', ' ', 'S'): {('q', 'B'), ('q', 1), ('q', 'A')},
                                  ('q', ' ', 'B'): {('q', 0), ('q', 1), ('q', 'B')},
                                  ('q', ' ', 'A'): {('q', 0), ('q', 'A')}, ('q', 0, 0): ('q', ' '),
                                  ('q', 1, 1): ('q', ' '), ('q', '', ''): ('q', ' ')}, 'S')